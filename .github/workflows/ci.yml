name: GitHub Action CI

on: workflow_dispatch

env:
  IMAGE_NAME: 82240947
  RESOURCE_GROUP_NAME: cepg-aa-std-rg
  AKS_CLUSTER_NAME: cepg-aa-std-aks-clstr

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Repository checkout
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.REPO_TOKEN }}

    # JDK 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Spring Boot 애플리케이션 패키징
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Kustomize 설치
    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1

    # 버전 생성
    - name: 'Gen Version'
      id: gen-version
      run: |
        echo "::set-output name=VERSION::$(date +%Y%m%d%H%M)"

    # Azure CLI 로그인
    - name: 'Login to Azure'
      run: |
        az login

    # Base ACR 로그인
    - name: 'ACR login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.BASEACR_LOGIN_SERVER }}  # cepgbaseacr.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}         # REGISTRY_USERNAME
        password: ${{ secrets.REGISTRY_PASSWORD }}         # REGISTRY_PASSWORD

    # Docker 이미지 빌드 및 태깅
    - name: 'Build & Tag Image'
      run: |
        docker build -t ${{ secrets.BASEACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.gen-version.outputs.VERSION }} -f Dockerfile .
        # 이미지를 CI/CD ACR에도 태깅
        docker tag ${{ secrets.BASEACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.gen-version.outputs.VERSION }} ${{ secrets.STAPACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.gen-version.outputs.VERSION }}  # ceappacr.azurecr.io

    # CI/CD ACR에 로그인 및 이미지 푸시
    - name: 'Push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.STAPACR_LOGIN_SERVER }}  # ceappacr.azurecr.io
        username: ${{ secrets.CI_ACR_USERNAME }}           # CI_ACR_USERNAME (ACR 이름)
        password: ${{ secrets.CI_ACR_PASSWORD }}           # CI_ACR_PASSWORD

    - run: |
        docker push ${{ secrets.STAPACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.gen-version.outputs.VERSION }}  # 푸시되는 이미지는 CI/CD ACR로

    # Kustomize를 사용하여 manifests에 이미지 태그 변경
    - name: Update Kubernetes resources
      run: |
        cd manifests/overlays/prod
        # 푸시된 이미지 태그로 Kubernetes 리소스 업데이트
        kustomize edit set image ${{ secrets.STAPACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ steps.gen-version.outputs.VERSION }}
        cat kustomization.yaml

    # AKS 클러스터에 대한 자격 증명 가져오기
    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP_NAME }} --name ${{ env.AKS_CLUSTER_NAME }}

    # Kubernetes에 배포
    - name: Deploy to AKS
      run: |
        kubectl apply -k manifests/overlays/prod  # Kustomize를 사용하여 배포

    # 변경 사항 커밋 및 푸시
    - name: Commit files
      run: |
        cd manifests
        git config --global user.email "yiryeong1631@naver.com"
        git config --global user.name "yiryeong"
        git commit -am "Update image tag"
        git push origin main


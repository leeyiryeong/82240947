name: Azure CI/CD Workflow

on: workflow_dispatch

env:
  IMAGE_NAME: 82240947
  RESOURCE_GROUP_NAME: cepg-aa-std-rg
  AKS_CLUSTER_NAME: cepg-aa-std-aks-clstr

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Repository checkout
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_TOKEN }}

      # JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Spring Boot 애플리케이션 패키징
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Azure CLI 로그인
      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Base ACR 로그인
      - name: 'ACR login'
        run: |
          az acr login --name ${{ secrets.REGISTRY_USERNAME }}  # ACR 이름으로 로그인

      # Docker 이미지 빌드 및 태깅
      - name: 'Build & Tag Image'
        run: |
          docker build -t ${{ secrets.BASEACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest -f Dockerfile .
          docker tag ${{ secrets.BASEACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest ${{ secrets.STAPACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

      # CI/CD ACR에 이미지 푸시
      - name: 'Push image'
        run: |
          docker push ${{ secrets.STAPACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

      # AKS 클러스터에 대한 자격 증명 가져오기
      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP_NAME }} --name ${{ env.AKS_CLUSTER_NAME }}

      # Kubernetes에 배포
      - name: Deploy to AKS
        run: |
          kubectl apply -f manifests/overlays/prod  # Kustomize를 사용하여 배포

